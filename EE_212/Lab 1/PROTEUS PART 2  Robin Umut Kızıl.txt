org 0
acall	CONFIGURE_LCD

;MOV R1, #00H ; high part of divend
;MOV R0, #02H ; low part of divend

;MOV 20H, #37H

;30h High part of quotient
;R3 low part of quotient
;R5 remainder

;CLR A
;mov dptr,#INPUTST
;
;DATA_LOOP:
;movc a,@a+dptr
;jz ST_TP
;acall SEND_DATA
;clr a
;inc dptr
;sjmp DATA_LOOP




ST_TP:
acall KEYBOARD
acall   SEND_DATA
ANL A, #0FH
MOV B, #64H
MUL AB
MOV 20H,A

acall KEYBOARD
acall   SEND_DATA
ANL A, #0FH
MOV B, #0AH
MUL AB
ADD A ,20H
MOV 20H,A

acall KEYBOARD
acall   SEND_DATA
ANL A, #0FH
ADD A ,20H
MOV 20H,A




COMEBACK: ACALL KEYBOARD
CJNE A, #'A', COMEBACK
MOV A, #0C0H
ACALL SEND_COMMAND
MOV A, #'{' ;'{'
acall   SEND_DATA


MOV dptr,#PRIME_TABLE

MOV 21H, #00H
MOV A, 21H
MOVC A,@A+DPTR
SJMP START

CONTROL: CLR A
MOV A , 30h
MOV R1, A
MOV A , R3
MOV R0, A
MOV A, 21H
MOVC A,@A+DPTR
NABER: ACALL ASCI_CONVERTER
acall   SEND_DATA


START: MOV R2, A ; divisor
ACALL MAIN_DIV
MOV A, R5
JZ CONTROL


INC 21H
MOV A, 21H
MOVC A,@A+DPTR
JNZ START


HERE: SJMP HERE











ASCI_CONVERTER:

CJNE R4, #04D,HERE1

HERE1: JZ LESS_10
SJMP MORE_10


LESS_10: MOV A ,R4
ADD A, #30H
SJMP NABER

MORE_10:CJNE R4, #21D,HERE2

HERE2: JZ LESS_100_MORE_10
SJMP MORE_100

LESS_100_MORE_10:
MOV A ,R4
MOV B, #10D
DIV AB
ADD A, #30h
ACALL SEND_DATA
MOV A, #','
ACALL SEND_DATA
MOV A ,R4
ANL A, #0FH
ADD A, #30h
SJMP NABER

MORE_100:
MOV A ,R4
MOV B, #100D
DIV AB
ADD A, #30h
ACALL SEND_DATA
MOV A, #','
ACALL SEND_DATA
MOV A ,R4
MOV B, #10D
ANL A, #0FH
ADD A, #30h
ACALL SEND_DATA
MOV A, #','
ACALL SEND_DATA
ANL A, #0FH
ADD A, #30h
SJMP NABER



SJMP NABER






RET








INPUTST: DB 'INPUT = ',0





MAIN_DIV:
MOV 17H,56H
	CLR C
	MOV A,#00H;
	MOV B,R2
	DIV AB
	MOV 30h,A
	MOV R7,B
	INC R7
	MOV R6, #00H
	MOV A,20H ;R0
	SJMP ROBN

ROBN2:	ADDC A,#0FFH
ROBN:   CLR C
	SUBB A,R2
	INC R6
	JNC ROBN
	DJNZ R7,ROBN2

	ADD A,R2
	MOV R5,A
	DEC R6
	MOV A,R6
	MOV R3,A
RET














CONFIGURE_LCD:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
	mov a,#38H	;TWO LINES, 5X7 MATRIX
	acall SEND_COMMAND
	mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
	acall SEND_COMMAND
	mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
	acall SEND_COMMAND
	mov a,#01H	;CLEAR DISPLAY SCREEN
	acall SEND_COMMAND
	mov a,#80H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
	acall SEND_COMMAND
	ret

SEND_COMMAND:
	mov p1,a		;THE COMMAND IS STORED IN A, SEND IT TO LCD
	clr p3.5		;RS=0 BEFORE SENDING COMMAND
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret

SEND_DATA:
	mov p1,a		;SEND THE DATA STORED IN A TO LCD
	setb p3.5	;RS=1 BEFORE SENDING DATA
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret

DELAY:
	push 0
	push 1
	mov r0,#50
DELAY_OUTER_LOOP:
	mov r1,#255
	djnz r1,$
	djnz r0,DELAY_OUTER_LOOP
	pop 1
	pop 0
	ret

KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
	mov	P0, #0ffh	;makes P0 input
K1:
	mov	P2, #0	;ground all rows
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, K1
K2:
	acall	DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER
	sjmp	K2
KB_OVER:
	acall DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER1
	sjmp	K2
KB_OVER1:
	mov	P2, #11111110B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_0
	mov	P2, #11111101B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_1
	mov	P2, #11111011B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_2
	mov	P2, #11110111B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_3
	ljmp	K2
	
ROW_0:
	mov	DPTR, #KCODE0
	sjmp	KB_FIND
ROW_1:
	mov	DPTR, #KCODE1
	sjmp	KB_FIND
ROW_2:
	mov	DPTR, #KCODE2
	sjmp	KB_FIND
ROW_3:
	mov	DPTR, #KCODE3
KB_FIND:
	rrc	A
	jnc	KB_MATCH
	inc	DPTR
	sjmp	KB_FIND
KB_MATCH:
	clr	A
	movc	A, @A+DPTR; get ASCII code from the table 
	ret

;ASCII look-up table 
KCODE0:	DB	'1', '2', '3', 'A'
KCODE1:	DB	'4', '5', '6', 'B'
KCODE2:	DB	'7', '8', '9', 'C'
KCODE3:	DB	'*', '0', '#', 'D'

MYSTRING: DB 'LCD IS OK!',0





ORG 500
PRIME_TABLE: DB 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,1

END
